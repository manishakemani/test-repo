apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: springboot-template
  title: DMTA Spring Boot Service
  description: Create a simple microservice using Spring Boot Java
  tags:
    - java
    - spring
spec:
  owner: az-soft-eng/dmta
  type: service

  parameters:
    - title: Time to create service
      required:
        - component_id
        
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the service
          ui:field: ValidateRepoName
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
    - title: Choose a repository location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - az-soft-eng
              - az-data-eng
    - title: Choose repository owner
      required:
        - repoOwner
      properties:
        repoOwner:
          title: Owner
          type: string
          description: Owner of the repo
          default: az-soft-eng/dmta

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          artifact_id: ${{ parameters.component_id }}
          java_package_name: ${{ parameters.component_id }}
          service_name: 'dmta-microservice-${{ parameters.component_id }}'
          destination: ${{ parameters.component_id }}
          owner: ${{ parameters.repoOwner }}
          name: ${{ parameters.repoName }}
          http_port: 8080

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is dmta-microservice-${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: 'internal'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.repoUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
